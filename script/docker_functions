###################################################################
##                                                               ##
##  This script contains common functions used in BioLockJ.      ##
##                                                               ##
###################################################################

export DOCKER_VER="docker-18.09.2"

# List all Doker images & containers
alias dockls='docker images; docker container ls --all'

# Use to build containers with BioLockJ installed.
# The date build-arg forces Docker to pull latest BioLockJ.tgz from GitHub 
buildBljCmd() {
	echo "docker build --build-arg BLJ_DATE=$(date +%s) --build-arg VER=$(biolockj -v)"
}

# Use to build containers with BioLockJ and the Docker client installed.
buildBljDockCliCmd() {
	echo "$(buildBljCmd) --build-arg DOCKER_CLIENT=$DOCKER_VER"
}

# Remove old Docker images
clearDock() {
	echo "Stop/remove all containers & remove old images..."
	containers=$(docker ps -aq)
	runningProcs=$(docker ps -q)
	images=$(docker images -f "dangling=true" -q) 
	
	[ ${#runningProcs} -gt 0 ] && docker kill $runningProcs
	[ ${#containers} -gt 0 ] && docker rm $containers
	[ ${#images} -gt 0 ] && docker rmi $images
	
	echo "Verify old containers & images have been removed..."
	dockls
}

# Instantiate Docker bash shell for image + map $BLJ_PROJ to $EFS_PROJ
# Param $1 = Docker image name (without user prefix)
# Example, for biolockj/rdp_classifier run: "dock rdp_classifier"
dock() {
	echo -e  "Run Docker CMD:  \"docker run --rm -v $BLJ_PROJ:$EFS_PROJ:delegated -it $DOCKER_HUB_USER/$1 /bin/bash"\"
	docker run --rm -v $BLJ_PROJ:$EFS_PROJ:delegated -it $DOCKER_HUB_USER/$1 /bin/bash
}

# Build Docker images that contain $BLJ
dockBuildBlj() {
	$(buildBljCmd) -t $DOCKER_HUB_USER/java_module${bljV} $DOCKER_FILE_PATH -f $DOCKER_FILE_PATH/java_module.Dockerfile
	$(buildBljDockCliCmd) -t $DOCKER_HUB_USER/biolockj_controller${bljV} $DOCKER_FILE_PATH -f $DOCKER_FILE_PATH/biolockj_controller.Dockerfile
	docker push $DOCKER_HUB_USER/java_module${bljV}
	docker push $DOCKER_HUB_USER/biolockj_controller${bljV}
	clearDock
}

# Instantiate Docker bash shell for image + map $BLJ_PROJ to $EFS_PROJ
# Param $1 = Docker image name (without user prefix)
# Param $2 = input directory
# Param $3 = optional "dev" param which overrides container $BLJ with localhost $BLJ
dockin() {
	echo "TESTING...$BLJ_PROJ"
	if [ $# -eq 3 ] && [ "$3" == "dev" ]; then
		echo -e  "Run Docker CMD:  \"docker run --rm -v $2:$EFS_INPUT:ro -v $BLJ_PROJ:$EFS_PROJ:delegated -v $BLJ:/app/biolockj -it $DOCKER_HUB_USER/$1 /bin/bash\""
		docker run --rm -v $2:$EFS_INPUT:ro -v $BLJ_PROJ:$EFS_PROJ:delegated -v $BLJ:/app/biolockj -it $DOCKER_HUB_USER/$1 /bin/bash
	else
		echo -e  "Run Docker CMD:  \"docker run --rm -v $2:$EFS_INPUT:ro -v $BLJ_PROJ:$EFS_PROJ:delegated -it $DOCKER_HUB_USER/$1 /bin/bash\""
		docker run --rm -v $2:$EFS_INPUT:ro -v $BLJ_PROJ:$EFS_PROJ:delegated -it $DOCKER_HUB_USER/$1 /bin/bash
	fi
}

# Instantiate Docker bash shell for biolockj_controller with  
# Param $1 = input directory
dockManager() {
	D_SOCK="/var/run/docker.sock"
	echo -e  "Run Docker CMD:  \"docker run --rm -v $BLJ_PROJ:$EFS_PROJ:delegated -v $D_SOCK:$D_SOCK v $1:$EFS_INPUT:ro -it $DOCKER_HUB_USER/biolockj_controller /bin/bash"\"
	docker run --rm -v $BLJ_PROJ:$EFS_PROJ:delegated -v $D_SOCK:$D_SOCK -v $1:$EFS_INPUT:ro -it $DOCKER_HUB_USER/biolockj_controller /bin/bash
}

# Launch a new bash shell for a running Docker container 
# Param $1 = Docker container name or ID
goDock() {
	docker exec -ti ${1} /bin/bash
}
